/** inputDimmer 1.0
 */"use strict";!function($,window){function gInputDimmer(aOpts,aCallback){function events(){t.each(function(){var i=$(this);i.addClass("id-dimmable").find("input, textarea").addBack("input, textarea").bind("focusin.id-on",function(){open(i,fOpts.open)}).click(function(i){i.stopPropagation()})}),$(window).bind("click.id-off",function(){close(null,fOpts.close)})}function open(i,n){$("body").removeClass("id-off").addClass("id-on"),i.addClass("id-dimmed"+("static"===i.css("position")?" id-r":"")),call(n,i)}function close(i,n){$("body").hasClass("id-on")&&($("body").removeClass("id-on").addClass("id-off"),$(".id-dimmed").find("textarea, input").addBack("textarea, input").blur().removeClass("id-dimmed id-r")),call(n)}function destroy(i,n){i.each(function(){var i=$(this);i.removeClass("id-dimmable id-dimmed id-r").find("input, textarea").addBack("input, textarea").unbind("focusin.id-on"),!$("body").find(".id-dimmable").length&&$(window).unbind("click.id-off")}).promise().done(function(){$("body").removeClass("id-on id-off")}),call(n,i)}function init(i){return i.hasClass("id-dimmable")}function call(i,n){var t=n||null;return i&&"function"==typeof i&&i(t)}var t=this,fOpts={};switch(typeof aOpts){case"undefined":case"object":fOpts=$.extend(fOpts,aOpts),events();break;case"string":switch(aOpts){case"close":case"open":case"destroy":init(t)?eval(aOpts+"(t"+(aCallback?", aCallback)":")")):console.error("[id]: element not init.");break;default:console.error("[id]: invalid option %s.",aOpts)}}return t}$.fn.inputDimmer=gInputDimmer,$(".id-dimmer").inputDimmer()}(jQuery,window);